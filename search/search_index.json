{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Index","text":""},{"location":"#templates","title":"Templates","text":"<p>A collection of templates to support the development of new and old projects.</p>"},{"location":"#bases-and-addons","title":"Bases and Addons","text":"<p>Bases are the foundation of a project, they are the starting point. Addons are the extra features that can be added to a project.</p>"},{"location":"#cookiecutter","title":"Cookiecutter","text":"<p>This repository maintains multiple cookiecutter templates.</p> <p>To configure a cookie cutter template, create a <code>cookiecutter.json</code> file in the root of the template directory and add your folder with the templated files. Folder names can also be templated, so you can use the <code>@{{ cookiecutter.project_slug }}</code> variable in the folder name.</p> <p>Example:</p> <pre><code>mkdocs\n\u251c\u2500\u2500 @{{ cookiecutter.project_slug }}\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 docs\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 README.md\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 faq.md\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 getting-started.md\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 index.md\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 requirements.txt\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 mkdocs.yaml\n\u2514\u2500\u2500 cookiecutter.json\n</code></pre> <p>All the variables in the <code>cookiecutter.json</code> file are required to be used at least once in the template files otherwise an error will be produced.</p>"},{"location":"#tamcli","title":"Tamcli","text":"<p>The <code>tamcli</code> tool is used to generate projects from the templates. It is a wrapper around the <code>cookiecutter</code> tool that adds some additional functionality like providing static input for the cookiecutter variables.</p>"},{"location":"faq/","title":"FAQ","text":"<p>Nothing more than a placeholder here</p>"},{"location":"getting-started/","title":"Getting Started","text":"<p>Nothing more than a placeholder here</p>"},{"location":"template/usage/","title":"Usage","text":""},{"location":"template/usage/#usage-instructions","title":"Usage Instructions","text":"<p>The preferred way to use the template is through the tam-cli tool. This tool allows you to easily initialize a new project with a template.</p>"},{"location":"template/usage/#installation","title":"Installation","text":"<pre><code>pipx install git+https://github.com/DND-IT/tam-cli.git\n</code></pre>"},{"location":"template/usage/#running","title":"Running","text":"<pre><code>tam template init [REPO_NAME]\n</code></pre> <p>Follow the prompts to select the template.</p>"},{"location":"templates_/","title":"Templates","text":"<ul> <li> <p>Bases: These are base templates intended to serve as bootstrap templates for new projects. They follow the opinionated golden paths recommended by the Tamedia Core engineering organisation.</p> </li> <li> <p>Addons: These templates are designed to be integrated into existing projects. They offer a structured approach to adding new features and are also opinionated in nature.</p> </li> <li> <p>External: This section lists templates that are stored in external repositories.</p> </li> </ul>"},{"location":"templates_/addons/discovery-app-layer/","title":"Discovery App Layer","text":"<p>This template is tailored on Discovery application deployment and it's meant to be applied after the (simple-app)[../../bases/simple-app] template.</p> <p>Discovery applications rely on the same ALB while there's path base listener rule to forward the requests to the proper Target Group.</p> <p>Note:</p> <ul> <li>the ALB is created in the discovery-infrastructure repository; a listener rule and target group dedicated to the service needs to be created before applying the simple-app and discovery-app templates</li> <li>the ALB for the preview branches (feature branches) is created by the annotations defined in the helm release terraform resource.</li> </ul>"},{"location":"templates_/addons/discovery-app-layer/#usage-instructions","title":"Usage Instructions","text":"<p>The preferred way to use the template is through the tam-cli tool. This tool allows you to easily initialize a new project with a template.</p>"},{"location":"templates_/addons/discovery-app-layer/#installation","title":"Installation","text":"<pre><code>pipx install git+https://github.com/DND-IT/tam-cli.git\n</code></pre>"},{"location":"templates_/addons/discovery-app-layer/#running","title":"Running","text":"<pre><code>tam template init [REPO_NAME]\n</code></pre> <p>Follow the prompts to select the template.</p>"},{"location":"templates_/addons/flux-cronjob-deployment/","title":"Template for Deploying a Cronjob to Kubernetes with FluxCD","text":"<p>A Template for deploying a cronjob to Kubernetes using FluxCD in the Titan environment.</p>"},{"location":"templates_/addons/flux-cronjob-deployment/#usage-instructions","title":"Usage Instructions","text":"<p>The preferred way to use the template is through the tam-cli tool. This tool allows you to easily initialize a new project with a template.</p>"},{"location":"templates_/addons/flux-cronjob-deployment/#installation","title":"Installation","text":"<pre><code>pipx install git+https://github.com/DND-IT/tam-cli.git\n</code></pre>"},{"location":"templates_/addons/flux-cronjob-deployment/#running","title":"Running","text":"<pre><code>tam template init [REPO_NAME]\n</code></pre> <p>Follow the prompts to select the template.</p>"},{"location":"templates_/addons/flux-service-deployment/","title":"Deploying a Service to Kubernetes with FluxCD","text":"<p>A Template for deploying a service to Kubernetes with FluxCD in the Titan environment.</p>"},{"location":"templates_/addons/flux-service-deployment/#usage-instructions","title":"Usage Instructions","text":"<p>The preferred way to use the template is through the tam-cli tool. This tool allows you to easily initialize a new project with a template.</p>"},{"location":"templates_/addons/flux-service-deployment/#installation","title":"Installation","text":"<pre><code>pipx install git+https://github.com/DND-IT/tam-cli.git\n</code></pre>"},{"location":"templates_/addons/flux-service-deployment/#running","title":"Running","text":"<pre><code>tam template init [REPO_NAME]\n</code></pre> <p>Follow the prompts to select the template.</p>"},{"location":"templates_/addons/github-workflows/","title":"Github Workflows","text":"<p>Template for creating Github workflows and Terraform base modules.</p>"},{"location":"templates_/addons/github-workflows/#usage-instructions","title":"Usage Instructions","text":"<p>The preferred way to use the template is through the tam-cli tool. This tool allows you to easily initialize a new project with a template.</p>"},{"location":"templates_/addons/github-workflows/#installation","title":"Installation","text":"<pre><code>pipx install git+https://github.com/DND-IT/tam-cli.git\n</code></pre>"},{"location":"templates_/addons/github-workflows/#running","title":"Running","text":"<pre><code>tam template init [REPO_NAME]\n</code></pre> <p>Follow the prompts to select the template.</p>"},{"location":"templates_/addons/mkdocs/","title":"MKDocs Template Documentation","text":"<p>A template for creating and deploying documentation using MKDocs, leveraging the Material theme for a clean and modern look.  The included CI/CD pipeline facilitates seamless deployment to GitHub Pages.</p>"},{"location":"templates_/addons/mkdocs/#template-structure","title":"Template Structure","text":"<ul> <li><code>mkdocs.yaml</code>: Configuration file for MKDocs, defining the site's appearance, navigation, and deployment settings.</li> <li><code>.github/workflows/</code>: Contains the GitHub Actions workflow for automatic deployment.</li> <li><code>docs/</code>: Contains the markdown files, configuration files, and static assets that make up the documentation.</li> <li><code>docs/.pages</code>:  Important file containing the <code>nav</code> definition for the site's navigation.</li> <li><code>docs/requirements.txt</code>: Lists the necessary Python packages.</li> <li><code>docs/static/</code>:  Folder for static assets like logos and favicons.</li> <li><code>docs/index.md</code>: Defaults to referencing the projects <code>README.md</code> file.</li> <li>(Other files like <code>getting-started.md</code>, <code>faq.md</code> etc.):  Markdown files containing the actual documentation content.</li> </ul>"},{"location":"templates_/addons/mkdocs/#usage-instructions","title":"Usage Instructions","text":"<p>The preferred way to use the template is through the tam-cli tool. This tool allows you to easily initialize a new project with a template.</p>"},{"location":"templates_/addons/mkdocs/#installation","title":"Installation","text":"<pre><code>pipx install git+https://github.com/DND-IT/tam-cli.git\n</code></pre>"},{"location":"templates_/addons/mkdocs/#running","title":"Running","text":"<pre><code>tam template init [REPO_NAME]\n</code></pre> <p>Follow the prompts to select the template.</p>"},{"location":"templates_/addons/ness-lambda/","title":"Ness Lambda triggered by cron or SQS","text":"<p>This addon is simply to manage an AWS lambda triggered by cron of SQS</p> <p>At the end it create a terraform file and the skeleton of a nodejs lambda in an existing repository.</p> <p>If the lambda is triggered by cron, it will have permission to write to an SQS queue If the lambda is triggered by sqs, the queue will be created</p> <p>As it's an addon, they are dependencies on terraform resources which should be present in the repo:</p> <ul> <li><code>data.aws_vpc.vpc_app_prod</code> the VPC in which the lambda should be attached</li> <li><code>data.aws_subnets.private_subnets</code> the subnets the lambda should be attached</li> <li><code>data.aws_region.current</code> the AWS region to deploy too</li> <li><code>data.aws_caller_identity.current</code> to retrieve tha AWS account id</li> <li><code>aws_security_group.vpc_lambda</code> the security group to attach to the lambda</li> <li><code>aws_vpc_security_group_egress_rule.vpc_lambda</code> egress in the above security group</li> <li><code>var.environment</code> the environment for which the lambda will run</li> <li><code>var.A_SECRET_NAME</code> a variable with the name of a secret (the name will be asked by <code>tam-cli</code>and will be passed as environment variable to the lambda). Usefull to get infos on how to connect to some external APIs</li> <li><code>random_string.this</code> used to name some AWS resources to avoid duplicates</li> </ul> <p>So the following terraform code should exists in the destination repo:</p> <pre><code>terraform {\n  required_providers {\n    random = {\n      source  = \"hashicorp/random\"\n      version = \"~&gt; 3.0\"\n    }\n  }\n}\n\nresource \"random_string\" \"this\" {\n  length  = 4\n  special = false\n  numeric = false\n  upper   = false\n}\n\nresource \"aws_security_group\" \"vpc_lambda\" {\n  name        = \"${var.environment}-YOUR-REPO-NAME\"\n  description = \"Security group attached to the lambdas\"\n  vpc_id      = data.aws_vpc.vpc_app_prod.id\n}\n\nresource \"aws_vpc_security_group_egress_rule\" \"vpc_lambda\" {\n  security_group_id = aws_security_group.vpc_lambda.id\n  cidr_ipv4         = \"0.0.0.0/0\"\n  ip_protocol       = -1\n}\n\ndata \"aws_caller_identity\" \"current\" {}\n\ndata \"aws_region\" \"current\" {}\n\ndata \"aws_vpc\" \"vpc_app_prod\" {\n  tags = {\n    Name      = \"VPCApp-Prod\"\n    Landscape = \"Prod\"\n  }\n}\n\ndata \"aws_subnets\" \"private_subnets\" {\n  filter {\n    name   = \"tag:Name\"\n    values = [\"VPCApp-Prod-Private1\", \"VPCApp-Prod-Private2\", \"VPCApp-Prod-Private3\"]\n  }\n}\n\nvariable \"environment\" {\n  description = \"The environment this resource will be deployed in.\"\n  type        = string\n}\n\nvariable \"A_SECRET_NAME\" {\n  description = \"Name of the secret with the infos to connect to studio\"\n  type        = string\n}\n</code></pre>"},{"location":"templates_/addons/ness-lambda/#to-improve","title":"To improve","text":"<ul> <li>Create a \"ness-lambda\" terraform module and let this template instanciate the module.</li> <li>Reduce the number of test in the template (create generic terraform file and let the user choose what to keep)</li> </ul>"},{"location":"templates_/addons/ness-lambda/#usage-instructions","title":"Usage Instructions","text":"<p>The preferred way to use the template is through the tam-cli tool. This tool allows you to easily initialize a new project with a template.</p>"},{"location":"templates_/addons/ness-lambda/#installation","title":"Installation","text":"<pre><code>pipx install git+https://github.com/DND-IT/tam-cli.git\n</code></pre>"},{"location":"templates_/addons/ness-lambda/#running","title":"Running","text":"<pre><code>tam template init [REPO_NAME]\n</code></pre> <p>Follow the prompts to select the template.</p>"},{"location":"templates_/bases/sfmc-app/","title":"SFMC Application Template","text":"<p>A template for deploying a simple SFMC application. It's designed to streamline the deployment process and provide a structured approach.</p>"},{"location":"templates_/bases/sfmc-app/#usage-instructions","title":"Usage Instructions","text":"<p>The preferred way to use the template is through the tam-cli tool. This tool allows you to easily initialize a new project with a template.</p>"},{"location":"templates_/bases/sfmc-app/#installation","title":"Installation","text":"<pre><code>pipx install git+https://github.com/DND-IT/tam-cli.git\n</code></pre>"},{"location":"templates_/bases/sfmc-app/#running","title":"Running","text":"<pre><code>tam template init [REPO_NAME]\n</code></pre> <p>Follow the prompts to select the template.</p>"},{"location":"templates_/bases/simple-app/","title":"Simple App Template","text":"<p>A minimal template for deploying an application to AWS using Terraform and Helm.</p>","tags":["simple-app","template"]},{"location":"templates_/bases/simple-app/#project-structure","title":"Project Structure","text":"<p>The project's structure is designed to be clear and maintainable, enabling efficient development and deployment processes.</p> <pre><code>My Simple App/\n\u251c\u2500\u2500 app/          # Application source code (e.g. Python Flask app) (modify as needed)\n\u2502   \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 deploy/       # Terraform code for infrastructure deployments\n\u2502   \u251c\u2500\u2500 app/      # Helm deployments for the application\n\u2502   \u251c\u2500\u2500 infra/    # Terraform resources for infrastructure (Databases, Storage, IAM)\n\u251c\u2500\u2500 .github/      # GitHub Actions workflows (for deployment)\n\u2502   \u2514\u2500\u2500 workflows/ # Folder containing deployment workflows\n\u2502       \u2514\u2500\u2500 ...    # GitHub workflow files to deploy and test\n</code></pre>","tags":["simple-app","template"]},{"location":"templates_/bases/simple-app/#application","title":"Application","text":"<p>The application, located in the <code>app/</code> directory, is a simple Python Flask application that is used purely for demonstration purposes and should be replaced with your application code.</p>","tags":["simple-app","template"]},{"location":"templates_/bases/simple-app/#infrastructure-deployment","title":"Infrastructure Deployment","text":"<p>The <code>deploy/infra/</code> directory contains Terraform code for deploying the infrastructure.</p> <ul> <li>It utilizes reusable modules like <code>iam-role-for-service-accounts-eks</code> for creating IAM Roles for EKS service accounts (IRSA) and other modules for managing RDS, Secrets, and other supporting resources.</li> <li>The project uses a single terraform configuration that is shared for all environments.</li> <li>It leverages GitHub Actions to automate deployments to different environments.  The <code>deploy/app/</code> directory contains configuration for deploying your application using Helm.</li> </ul>","tags":["simple-app","template"]},{"location":"templates_/bases/simple-app/#usage-instructions","title":"Usage Instructions","text":"<p>The preferred way to use the template is through the tam-cli tool. This tool allows you to easily initialize a new project with a template.</p>","tags":["simple-app","template"]},{"location":"templates_/bases/simple-app/#installation","title":"Installation","text":"<pre><code>pipx install git+https://github.com/DND-IT/tam-cli.git\n</code></pre>","tags":["simple-app","template"]},{"location":"templates_/bases/simple-app/#running","title":"Running","text":"<pre><code>tam template init [REPO_NAME]\n</code></pre> <p>Follow the prompts to select the template.</p>","tags":["simple-app","template"]},{"location":"templates_/external/template-infra/","title":"Platform Infrastructure Template","text":"<p>A template for creating team infrastructure repositories.</p> <p>https://github.com/DND-IT/template-infra</p>"}]}